{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nattapon\\\\Desktop\\\\Work other\\\\E-commerce\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Fetch all products\n    fetch('http://localhost:4000/allproducts').then(response => response.json()).then(data => setAll_Product(data));\n\n    // Fetch cart items if user is authenticated\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/getcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: \"\"\n      }).then(response => response.json()).then(data => setCartItems(data));\n    }\n\n    // Simulate fetching user info from a local source\n    const fetchUserInfo = () => {\n      // Assuming you have a method to decode JWT token or session storage\n      const token = localStorage.getItem('auth-token');\n      if (token) {\n        // This is a placeholder function. Replace with actual decoding logic.\n        const decodedToken = decodeToken(token); // Hypothetical function\n        setUser(decodedToken.user); // Assuming the token contains user info\n      }\n    };\n    fetchUserInfo();\n  }, []);\n  const addToCart = (itemId, size, price) => {\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId,\n          \"size\": size,\n          \"price\": price\n        })\n      }).then(response => response.json()).then(data => console.log(data)).finally(() => {\n        fetch('http://localhost:4000/getcart', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/form-data',\n            'auth-token': `${localStorage.getItem('auth-token')}`,\n            'Content-Type': 'application/json'\n          },\n          body: \"\"\n        }).then(response => response.json()).then(data => setCartItems(data));\n      });\n    }\n  };\n  const removeToCart = (itemId, size) => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId,\n          \"size\": size\n        })\n      }).then(response => response.json()).then(data => console.log(data)).finally(() => {\n        fetch('http://localhost:4000/getcart', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/form-data',\n            'auth-token': `${localStorage.getItem('auth-token')}`,\n            'Content-Type': 'application/json'\n          },\n          body: \"\"\n        }).then(response => response.json()).then(data => setCartItems(data));\n      });\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    if (cartItems.length > 0) {\n      totalAmount = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n    }\n    return totalAmount;\n  };\n  const getTotalCartItem = () => {\n    let totalItem = 0;\n    if (cartItems.length > 0) {\n      totalItem = cartItems.reduce((acc, item) => acc + item.quantity, 0);\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartItem,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeToCart,\n    user\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"IoT4UQsDdY3Akm6hzsR+oYMpJh8=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","user","setUser","fetch","then","response","json","data","localStorage","getItem","method","headers","Accept","body","fetchUserInfo","token","decodedToken","decodeToken","addToCart","itemId","size","price","JSON","stringify","console","log","finally","removeToCart","prev","getTotalCartAmount","totalAmount","length","reduce","acc","item","quantity","getTotalCartItem","totalItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Nattapon/Desktop/Work other/E-commerce/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let index = 0; index < 300 + 1; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n}\r\n\r\nconst ShopContextProvider = (props) => {\r\n\r\n    const [all_product, setAll_Product] = useState([]);\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch all products\r\n        fetch('http://localhost:4000/allproducts')\r\n            .then((response) => response.json())\r\n            .then((data) => setAll_Product(data));\r\n\r\n        // Fetch cart items if user is authenticated\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/getcart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/form-data',\r\n                    'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: \"\",\r\n            }).then((response) => response.json())\r\n                .then((data) => setCartItems(data));\r\n        }\r\n\r\n        // Simulate fetching user info from a local source\r\n        const fetchUserInfo = () => {\r\n            // Assuming you have a method to decode JWT token or session storage\r\n            const token = localStorage.getItem('auth-token');\r\n            if (token) {\r\n                // This is a placeholder function. Replace with actual decoding logic.\r\n                const decodedToken = decodeToken(token); // Hypothetical function\r\n                setUser(decodedToken.user); // Assuming the token contains user info\r\n            }\r\n        };\r\n\r\n        fetchUserInfo();\r\n    }, []);\r\n\r\n    const addToCart = (itemId, size, price) => {\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/addtocart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/form-data',\r\n                    'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \"itemId\": itemId, \"size\": size, \"price\": price }),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => console.log(data)).finally(() => {\r\n                    fetch('http://localhost:4000/getcart', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            Accept: 'application/form-data',\r\n                            'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: \"\",\r\n                    }).then((response) => response.json())\r\n                        .then((data) => setCartItems(data));\r\n                });\r\n        }\r\n    };\r\n\r\n    const removeToCart = (itemId, size) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/removefromcart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/form-data',\r\n                    'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \"itemId\": itemId, \"size\": size }),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => console.log(data)).finally(() => {\r\n                    fetch('http://localhost:4000/getcart', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            Accept: 'application/form-data',\r\n                            'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: \"\",\r\n                    }).then((response) => response.json())\r\n                        .then((data) => setCartItems(data));\r\n                });\r\n        }\r\n    };\r\n\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        if (cartItems.length > 0) {\r\n            totalAmount = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\r\n        }\r\n        return totalAmount;\r\n    };\r\n\r\n    const getTotalCartItem = () => {\r\n        let totalItem = 0;\r\n        if (cartItems.length > 0) {\r\n            totalItem = cartItems.reduce((acc, item) => acc + item.quantity, 0);\r\n        }\r\n        return totalItem;\r\n    };\r\n\r\n    const contextValue = { getTotalCartItem, getTotalCartAmount, all_product, cartItems, addToCart, removeToCart, user };\r\n\r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAE9C,MAAMM,cAAc,GAAGA,CAAA,KAAM;EACzB,IAAIC,IAAI,GAAG,CAAC,CAAC;EACb,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,GAAG,GAAG,CAAC,EAAEA,KAAK,EAAE,EAAE;IAC1CD,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;EACnB;EACA,OAAOD,IAAI;AACf,CAAC;AAED,MAAME,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEnC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ;IACAiB,KAAK,CAAC,mCAAmC,CAAC,CACrCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKT,cAAc,CAACS,IAAI,CAAC,CAAC;;IAEzC;IACA,IAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;MACpCN,KAAK,CAAC,+BAA+B,EAAE;QACnCO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACLC,MAAM,EAAE,uBAAuB;UAC/B,YAAY,EAAE,GAAGJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;UACrD,cAAc,EAAE;QACpB,CAAC;QACDI,IAAI,EAAE;MACV,CAAC,CAAC,CAACT,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAEG,IAAI,IAAKP,YAAY,CAACO,IAAI,CAAC,CAAC;IAC3C;;IAEA;IACA,MAAMO,aAAa,GAAGA,CAAA,KAAM;MACxB;MACA,MAAMC,KAAK,GAAGP,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MAChD,IAAIM,KAAK,EAAE;QACP;QACA,MAAMC,YAAY,GAAGC,WAAW,CAACF,KAAK,CAAC,CAAC,CAAC;QACzCb,OAAO,CAACc,YAAY,CAACf,IAAI,CAAC,CAAC,CAAC;MAChC;IACJ,CAAC;IAEDa,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,SAAS,GAAGA,CAACC,MAAM,EAAEC,IAAI,EAAEC,KAAK,KAAK;IACvC,IAAIb,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;MACpCN,KAAK,CAAC,iCAAiC,EAAE;QACrCO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACLC,MAAM,EAAE,uBAAuB;UAC/B,YAAY,EAAE,GAAGJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;UACrD,cAAc,EAAE;QACpB,CAAC;QACDI,IAAI,EAAES,IAAI,CAACC,SAAS,CAAC;UAAE,QAAQ,EAAEJ,MAAM;UAAE,MAAM,EAAEC,IAAI;UAAE,OAAO,EAAEC;QAAM,CAAC;MAC3E,CAAC,CAAC,CACGjB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKiB,OAAO,CAACC,GAAG,CAAClB,IAAI,CAAC,CAAC,CAACmB,OAAO,CAAC,MAAM;QAC7CvB,KAAK,CAAC,+BAA+B,EAAE;UACnCO,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACLC,MAAM,EAAE,uBAAuB;YAC/B,YAAY,EAAE,GAAGJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;YACrD,cAAc,EAAE;UACpB,CAAC;UACDI,IAAI,EAAE;QACV,CAAC,CAAC,CAACT,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAEG,IAAI,IAAKP,YAAY,CAACO,IAAI,CAAC,CAAC;MAC3C,CAAC,CAAC;IACV;EACJ,CAAC;EAED,MAAMoB,YAAY,GAAGA,CAACR,MAAM,EAAEC,IAAI,KAAK;IACnCpB,YAAY,CAAE4B,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACT,MAAM,GAAGS,IAAI,CAACT,MAAM,CAAC,GAAG;IAAE,CAAC,CAAC,CAAC;IACjE,IAAIX,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;MACpCN,KAAK,CAAC,sCAAsC,EAAE;QAC1CO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACLC,MAAM,EAAE,uBAAuB;UAC/B,YAAY,EAAE,GAAGJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;UACrD,cAAc,EAAE;QACpB,CAAC;QACDI,IAAI,EAAES,IAAI,CAACC,SAAS,CAAC;UAAE,QAAQ,EAAEJ,MAAM;UAAE,MAAM,EAAEC;QAAK,CAAC;MAC3D,CAAC,CAAC,CACGhB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKiB,OAAO,CAACC,GAAG,CAAClB,IAAI,CAAC,CAAC,CAACmB,OAAO,CAAC,MAAM;QAC7CvB,KAAK,CAAC,+BAA+B,EAAE;UACnCO,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACLC,MAAM,EAAE,uBAAuB;YAC/B,YAAY,EAAE,GAAGJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;YACrD,cAAc,EAAE;UACpB,CAAC;UACDI,IAAI,EAAE;QACV,CAAC,CAAC,CAACT,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAEG,IAAI,IAAKP,YAAY,CAACO,IAAI,CAAC,CAAC;MAC3C,CAAC,CAAC;IACV;EACJ,CAAC;EAED,MAAMsB,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAI/B,SAAS,CAACgC,MAAM,GAAG,CAAC,EAAE;MACtBD,WAAW,GAAG/B,SAAS,CAACiC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACb,KAAK,GAAGa,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;IACtF;IACA,OAAOL,WAAW;EACtB,CAAC;EAED,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIC,SAAS,GAAG,CAAC;IACjB,IAAItC,SAAS,CAACgC,MAAM,GAAG,CAAC,EAAE;MACtBM,SAAS,GAAGtC,SAAS,CAACiC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;IACvE;IACA,OAAOE,SAAS;EACpB,CAAC;EAED,MAAMC,YAAY,GAAG;IAAEF,gBAAgB;IAAEP,kBAAkB;IAAEhC,WAAW;IAAEE,SAAS;IAAEmB,SAAS;IAAES,YAAY;IAAE1B;EAAK,CAAC;EAEpH,oBACIZ,OAAA,CAACC,WAAW,CAACiD,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EACrC9C,KAAK,CAAC8C;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B,CAAC;AAACjD,EAAA,CAtHIF,mBAAmB;AAAAoD,EAAA,GAAnBpD,mBAAmB;AAwHzB,eAAeA,mBAAmB;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}