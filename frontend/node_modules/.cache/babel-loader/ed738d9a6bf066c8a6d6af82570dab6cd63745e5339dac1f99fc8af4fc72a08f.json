{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nattapon\\\\Desktop\\\\Work other\\\\E-commerce\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 301; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:4000/allproducts').then(response => response.json()).then(data => setAll_Product(data)).catch(error => console.error('Error fetching all products:', error));\n    const authToken = localStorage.getItem('auth-token');\n    if (authToken) {\n      fetch('http://localhost:4000/getcart', {\n        method: 'POST',\n        headers: {\n          'auth-token': authToken,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({})\n      }).then(response => response.json()).then(data => setCartItems(data)).catch(error => console.error('Error fetching cart:', error));\n\n      // Fetch user info after login\n      fetch('http://localhost:4000/getuser', {\n        method: 'POST',\n        headers: {\n          'auth-token': authToken,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({})\n      }).then(response => response.json()).then(data => setUser(data)).catch(error => console.error('Error fetching user info:', error));\n    }\n  }, []);\n  const addToCart = (itemId, size, price) => {\n    const authToken = localStorage.getItem('auth-token');\n    if (authToken) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          'auth-token': authToken,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          itemId,\n          size,\n          price\n        })\n      }).then(response => response.json()).then(data => {\n        console.log('Item added to cart:', data);\n        updateCart();\n      }).catch(error => console.error('Error adding to cart:', error));\n    }\n  };\n  const removeToCart = (itemId, size) => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] > 0 ? prev[itemId] - 1 : 0\n    }));\n    const authToken = localStorage.getItem('auth-token');\n    if (authToken) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          'auth-token': authToken,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          itemId,\n          size\n        })\n      }).then(response => response.json()).then(data => {\n        console.log('Item removed from cart:', data);\n        updateCart();\n      }).catch(error => console.error('Error removing from cart:', error));\n    }\n  };\n  const updateCart = () => {\n    fetch('http://localhost:4000/getcart', {\n      method: 'POST',\n      headers: {\n        'auth-token': localStorage.getItem('auth-token'),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    }).then(response => response.json()).then(data => setCartItems(data)).catch(error => console.error('Error updating cart:', error));\n  };\n  const getTotalCartAmount = () => {\n    return cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n  };\n  const getTotalCartItem = () => {\n    return cartItems.reduce((acc, item) => acc + item.quantity, 0);\n  };\n  const contextValue = {\n    getTotalCartItem,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeToCart,\n    user\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"IoT4UQsDdY3Akm6hzsR+oYMpJh8=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","user","setUser","fetch","then","response","json","data","catch","error","console","authToken","localStorage","getItem","method","headers","body","JSON","stringify","addToCart","itemId","size","price","log","updateCart","removeToCart","prev","getTotalCartAmount","reduce","acc","item","quantity","getTotalCartItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Nattapon/Desktop/Work other/E-commerce/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let index = 0; index < 301; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n};\r\n\r\nconst ShopContextProvider = (props) => {\r\n    const [all_product, setAll_Product] = useState([]);\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/allproducts')\r\n            .then(response => response.json())\r\n            .then(data => setAll_Product(data))\r\n            .catch(error => console.error('Error fetching all products:', error));\r\n\r\n        const authToken = localStorage.getItem('auth-token');\r\n        if (authToken) {\r\n            fetch('http://localhost:4000/getcart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'auth-token': authToken,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({}),\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => setCartItems(data))\r\n                .catch(error => console.error('Error fetching cart:', error));\r\n\r\n            // Fetch user info after login\r\n            fetch('http://localhost:4000/getuser', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'auth-token': authToken,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({}),\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => setUser(data))\r\n                .catch(error => console.error('Error fetching user info:', error));\r\n        }\r\n    }, []);\r\n\r\n    const addToCart = (itemId, size, price) => {\r\n        const authToken = localStorage.getItem('auth-token');\r\n        if (authToken) {\r\n            fetch('http://localhost:4000/addtocart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'auth-token': authToken,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ itemId, size, price }),\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log('Item added to cart:', data);\r\n                    updateCart();\r\n                })\r\n                .catch(error => console.error('Error adding to cart:', error));\r\n        }\r\n    };\r\n\r\n    const removeToCart = (itemId, size) => {\r\n        setCartItems((prev) => ({\r\n            ...prev,\r\n            [itemId]: prev[itemId] > 0 ? prev[itemId] - 1 : 0\r\n        }));\r\n\r\n        const authToken = localStorage.getItem('auth-token');\r\n        if (authToken) {\r\n            fetch('http://localhost:4000/removefromcart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'auth-token': authToken,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ itemId, size }),\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log('Item removed from cart:', data);\r\n                    updateCart();\r\n                })\r\n                .catch(error => console.error('Error removing from cart:', error));\r\n        }\r\n    };\r\n\r\n    const updateCart = () => {\r\n        fetch('http://localhost:4000/getcart', {\r\n            method: 'POST',\r\n            headers: {\r\n                'auth-token': localStorage.getItem('auth-token'),\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({}),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => setCartItems(data))\r\n            .catch(error => console.error('Error updating cart:', error));\r\n    };\r\n\r\n    const getTotalCartAmount = () => {\r\n        return cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\r\n    };\r\n\r\n    const getTotalCartItem = () => {\r\n        return cartItems.reduce((acc, item) => acc + item.quantity, 0);\r\n    };\r\n\r\n    const contextValue = { getTotalCartItem, getTotalCartAmount, all_product, cartItems, addToCart, removeToCart, user };\r\n\r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}