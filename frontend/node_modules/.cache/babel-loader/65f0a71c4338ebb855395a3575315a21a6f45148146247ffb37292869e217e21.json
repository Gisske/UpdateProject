{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nattapon\\\\Desktop\\\\Work other\\\\E-commerce\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const productResponse = await fetch('http://localhost:4000/allproducts');\n        if (!productResponse.ok) throw new Error('Failed to fetch products');\n        const products = await productResponse.json();\n        setAll_Product(products);\n        if (localStorage.getItem('auth-token')) {\n          const cartResponse = await fetch('http://localhost:4000/getcart', {\n            method: 'POST',\n            headers: {\n              Accept: 'application/form-data',\n              'auth-token': `${localStorage.getItem('auth-token')}`,\n              'Content-Type': 'application/json'\n            },\n            body: \"\"\n          });\n          if (!cartResponse.ok) throw new Error('Failed to fetch cart');\n          const cartData = await cartResponse.json();\n          setCartItems(cartData);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const addToCart = async (itemId, size) => {\n    setCartItems(prev => {\n      const existingItem = prev[itemId] || {};\n      const updatedItem = {\n        ...existingItem,\n        [size]: (existingItem[size] || 0) + 1\n      };\n      return {\n        ...prev,\n        [itemId]: updatedItem\n      };\n    });\n    if (localStorage.getItem('auth-token')) {\n      try {\n        const response = await fetch('http://localhost:4000/addtocart', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/form-data',\n            'auth-token': `${localStorage.getItem('auth-token')}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            itemId,\n            size\n          })\n        });\n        if (!response.ok) throw new Error('Failed to add item to cart');\n        const data = await response.json();\n        console.log('Added to cart:', data);\n      } catch (error) {\n        console.error('Error adding to cart:', error);\n      }\n    }\n  };\n  const removeToCart = async (itemId, size) => {\n    setCartItems(prev => {\n      const existingItem = prev[itemId] || {};\n      const updatedSizeQuantity = (existingItem[size] || 0) - 1;\n      const updatedItem = updatedSizeQuantity > 0 ? {\n        ...existingItem,\n        [size]: updatedSizeQuantity\n      } : {\n        ...existingItem\n      };\n      if (updatedSizeQuantity <= 0) delete updatedItem[size];\n      return Object.keys(updatedItem).length > 0 ? {\n        ...prev,\n        [itemId]: updatedItem\n      } : {\n        ...prev,\n        [itemId]: undefined\n      };\n    });\n    if (localStorage.getItem('auth-token')) {\n      try {\n        const response = await fetch('http://localhost:4000/removefromcart', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/form-data',\n            'auth-token': `${localStorage.getItem('auth-token')}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            itemId,\n            size\n          })\n        });\n        if (!response.ok) throw new Error('Failed to remove item from cart');\n        const data = await response.json();\n        console.log('Removed from cart:', data);\n      } catch (error) {\n        console.error('Error removing from cart:', error);\n      }\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        if (itemInfo) {\n          // ตรวจสอบว่า itemInfo ไม่ใช่ undefined\n          totalAmount += itemInfo.new_price * cartItems[item];\n        }\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItem = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartItem,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeToCart\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"2TWfLOVtZEcAkOpQXwNNYfVqbAU=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","fetchData","productResponse","fetch","ok","Error","products","json","localStorage","getItem","cartResponse","method","headers","Accept","body","cartData","error","console","addToCart","itemId","size","prev","existingItem","updatedItem","response","JSON","stringify","data","log","removeToCart","updatedSizeQuantity","Object","keys","length","undefined","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItem","totalItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Nattapon/Desktop/Work other/E-commerce/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\nconst getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let index = 0; index < 300 + 1; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n}\r\nconst ShopContextProvider = (props) => {\r\n    const [all_product, setAll_Product] = useState([]);\r\n    const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const productResponse = await fetch('http://localhost:4000/allproducts');\r\n                if (!productResponse.ok) throw new Error('Failed to fetch products');\r\n                const products = await productResponse.json();\r\n                setAll_Product(products);\r\n\r\n                if (localStorage.getItem('auth-token')) {\r\n                    const cartResponse = await fetch('http://localhost:4000/getcart', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            Accept: 'application/form-data',\r\n                            'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: \"\",\r\n                    });\r\n                    if (!cartResponse.ok) throw new Error('Failed to fetch cart');\r\n                    const cartData = await cartResponse.json();\r\n                    setCartItems(cartData);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const addToCart = async (itemId, size) => {\r\n        setCartItems((prev) => {\r\n            const existingItem = prev[itemId] || {};\r\n            const updatedItem = {\r\n                ...existingItem,\r\n                [size]: (existingItem[size] || 0) + 1\r\n            };\r\n            return { ...prev, [itemId]: updatedItem };\r\n        });\r\n\r\n        if (localStorage.getItem('auth-token')) {\r\n            try {\r\n                const response = await fetch('http://localhost:4000/addtocart', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/form-data',\r\n                        'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ itemId, size }),\r\n                });\r\n                if (!response.ok) throw new Error('Failed to add item to cart');\r\n                const data = await response.json();\r\n                console.log('Added to cart:', data);\r\n            } catch (error) {\r\n                console.error('Error adding to cart:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const removeToCart = async (itemId, size) => {\r\n        setCartItems((prev) => {\r\n            const existingItem = prev[itemId] || {};\r\n            const updatedSizeQuantity = (existingItem[size] || 0) - 1;\r\n            const updatedItem = updatedSizeQuantity > 0\r\n                ? { ...existingItem, [size]: updatedSizeQuantity }\r\n                : { ...existingItem };\r\n            if (updatedSizeQuantity <= 0) delete updatedItem[size];\r\n            return Object.keys(updatedItem).length > 0\r\n                ? { ...prev, [itemId]: updatedItem }\r\n                : { ...prev, [itemId]: undefined };\r\n        });\r\n\r\n        if (localStorage.getItem('auth-token')) {\r\n            try {\r\n                const response = await fetch('http://localhost:4000/removefromcart', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        Accept: 'application/form-data',\r\n                        'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ itemId, size }),\r\n                });\r\n                if (!response.ok) throw new Error('Failed to remove item from cart');\r\n                const data = await response.json();\r\n                console.log('Removed from cart:', data);\r\n            } catch (error) {\r\n                console.error('Error removing from cart:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for (const item in cartItems) {\r\n            if (cartItems[item] > 0) {\r\n                let itemInfo = all_product.find((product) => product.id === Number(item));\r\n                if (itemInfo) { // ตรวจสอบว่า itemInfo ไม่ใช่ undefined\r\n                    totalAmount += itemInfo.new_price * cartItems[item];\r\n                }\r\n\r\n            }\r\n        }\r\n        return totalAmount;\r\n    }\r\n\r\n    const getTotalCartItem = () => {\r\n        let totalItem = 0;\r\n        for (const item in cartItems) {\r\n            if (cartItems[item] > 0) {\r\n                totalItem += cartItems[item];\r\n            }\r\n        }\r\n        return totalItem;\r\n    }\r\n\r\n\r\n\r\n    const contextValue = { getTotalCartItem, getTotalCartAmount, all_product, cartItems, addToCart, removeToCart };\r\n\r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    );\r\n};\r\nexport default ShopContextProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}