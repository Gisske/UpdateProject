{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nattapon\\\\Desktop\\\\Work other\\\\E-commerce\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  useEffect(() => {\n    fetch('http://localhost:4000/allproducts').then(response => response.json()).then(data => setAll_Product(data));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/getcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: \"\"\n      }).then(response => response.json()).then(data => setCartItems(data));\n    }\n  }, []);\n  const addToCart = (itemId, selectedSize) => {\n    setCartItems(prev => {\n      const cartKey = `${itemId}-${selectedSize}`;\n      return {\n        ...prev,\n        [cartKey]: (prev[cartKey] || 0) + 1\n      };\n    });\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          itemId,\n          selectedSize\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  const removeToCart = (itemId, selectedSize) => {\n    setCartItems(prev => {\n      const cartKey = `${itemId}-${selectedSize}`;\n      return {\n        ...prev,\n        [cartKey]: Math.max((prev[cartKey] || 0) - 1, 0)\n      };\n    });\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          itemId,\n          selectedSize\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const cartKey in cartItems) {\n      if (cartItems[cartKey] > 0) {\n        const [itemId] = cartKey.split('-');\n        const itemInfo = all_product.find(product => product.id === Number(itemId));\n        if (itemInfo) {\n          totalAmount += itemInfo.new_price * cartItems[cartKey];\n        }\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItem = () => {\n    let totalItem = 0;\n    for (const cartKey in cartItems) {\n      if (cartItems[cartKey] > 0) {\n        totalItem += cartItems[cartKey];\n      }\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartItem,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeToCart\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"2TWfLOVtZEcAkOpQXwNNYfVqbAU=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","fetch","then","response","json","data","localStorage","getItem","method","headers","Accept","body","addToCart","itemId","selectedSize","prev","cartKey","JSON","stringify","console","log","removeToCart","Math","max","getTotalCartAmount","totalAmount","split","itemInfo","find","product","id","Number","new_price","getTotalCartItem","totalItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Nattapon/Desktop/Work other/E-commerce/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n    let cart = {};\r\n    return cart;\r\n}\r\n\r\nconst ShopContextProvider = (props) => {\r\n    const [all_product, setAll_Product] = useState([]);\r\n    const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/allproducts')\r\n            .then((response) => response.json())\r\n            .then((data) => setAll_Product(data))\r\n\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/getcart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/form-data',\r\n                    'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: \"\",\r\n            }).then((response) => response.json())\r\n                .then((data) => setCartItems(data))\r\n        }\r\n    }, []);\r\n\r\n    const addToCart = (itemId, selectedSize) => {\r\n        setCartItems((prev) => {\r\n            const cartKey = `${itemId}-${selectedSize}`;\r\n            return { ...prev, [cartKey]: (prev[cartKey] || 0) + 1 };\r\n        });\r\n\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/addtocart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/form-data',\r\n                    'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ itemId, selectedSize }),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => console.log(data));\r\n        }\r\n    }\r\n\r\n    const removeToCart = (itemId, selectedSize) => {\r\n        setCartItems((prev) => {\r\n            const cartKey = `${itemId}-${selectedSize}`;\r\n            return { ...prev, [cartKey]: Math.max((prev[cartKey] || 0) - 1, 0) };\r\n        });\r\n\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/removefromcart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/form-data',\r\n                    'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ itemId, selectedSize }),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => console.log(data));\r\n        }\r\n    }\r\n\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for (const cartKey in cartItems) {\r\n            if (cartItems[cartKey] > 0) {\r\n                const [itemId] = cartKey.split('-');\r\n                const itemInfo = all_product.find((product) => product.id === Number(itemId));\r\n                if (itemInfo) {\r\n                    totalAmount += itemInfo.new_price * cartItems[cartKey];\r\n                }\r\n            }\r\n        }\r\n        return totalAmount;\r\n    }\r\n\r\n    const getTotalCartItem = () => {\r\n        let totalItem = 0;\r\n        for (const cartKey in cartItems) {\r\n            if (cartItems[cartKey] > 0) {\r\n                totalItem += cartItems[cartKey];\r\n            }\r\n        }\r\n        return totalItem;\r\n    }\r\n\r\n    const contextValue = { getTotalCartItem, getTotalCartAmount, all_product, cartItems, addToCart, removeToCart };\r\n\r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}