{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nattapon\\\\Desktop\\\\Work other\\\\E-commerce\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const [user, setUser] = useState(null); // เก็บข้อมูลผู้ใช้ที่ล็อกอิน\n\n  useEffect(() => {\n    fetch('http://localhost:4000/allproducts').then(response => response.json()).then(data => setAll_Product(data));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/getcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: \"\"\n      }).then(response => response.json()).then(data => setCartItems(data));\n    }\n    // ดึงข้อมูลผู้ใช้เมื่อมี auth-token\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/getuserinfo', {\n        // สมมติว่า API มี endpoint สำหรับดึงข้อมูลผู้ใช้\n        method: 'GET',\n        headers: {\n          'auth-token': localStorage.getItem('auth-token'),\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        setUser(data); // เก็บข้อมูลผู้ใช้ที่ล็อกอิน\n      }).catch(error => console.error('Error fetching user info:', error));\n    }\n  }, []);\n  const addToCart = (itemId, size, price) => {\n    const authToken = localStorage.getItem('auth-token');\n    if (authToken) {\n      // ส่งคำขอ POST เพื่อเพิ่มสินค้าในตะกร้า\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'auth-token': authToken,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId,\n          \"size\": size,\n          \"price\": price\n        })\n      }).then(response => response.json()).then(data => {\n        console.log('Added to cart response:', data);\n\n        // ตรวจสอบผู้ใช้จากการรับ auth-token\n        const name = data === null || data === void 0 ? void 0 : data.name; // assuming userId is returned in response for user identification\n\n        if (name) {\n          // แสดงข้อมูลของผู้ใช้ในคอนโซล\n          console.log('User info:', data.user);\n        } else {\n          console.warn('Unable to retrieve user information');\n        }\n\n        // Fetch updated cart items after adding\n        return fetch('http://localhost:4000/getcart', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'auth-token': authToken,\n            'Content-Type': 'application/json'\n          },\n          body: \"\" // No body data needed for getting the cart\n        });\n      }).then(response => response.json()).then(data => {\n        console.log('Updated cart items:', data);\n        setCartItems(data); // update the state with new cart items\n      }).catch(error => console.error('Error:', error));\n    } else {\n      console.warn('User not authenticated');\n    }\n  };\n  const removeToCart = (itemId, size) => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId,\n          \"size\": size\n        })\n      }).then(response => response.json()).then(data => console.log(data)).finally(() => {\n        fetch('http://localhost:4000/getcart', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/form-data',\n            'auth-token': `${localStorage.getItem('auth-token')}`,\n            'Content-Type': 'application/json'\n          },\n          body: \"\"\n        }).then(response => response.json()).then(data => setCartItems(data));\n      });\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    if (cartItems.length > 0) {\n      totalAmount = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n    }\n    return totalAmount;\n  };\n  const getTotalCartItem = () => {\n    let totalItem = 0;\n    if (cartItems.length > 0) {\n      totalItem = cartItems.reduce((acc, item) => acc + item.quantity, 0);\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartItem,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeToCart\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"IoT4UQsDdY3Akm6hzsR+oYMpJh8=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","user","setUser","fetch","then","response","json","data","localStorage","getItem","method","headers","Accept","body","catch","error","console","addToCart","itemId","size","price","authToken","JSON","stringify","log","name","warn","removeToCart","prev","finally","getTotalCartAmount","totalAmount","length","reduce","acc","item","quantity","getTotalCartItem","totalItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Nattapon/Desktop/Work other/E-commerce/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\nconst getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let index = 0; index < 300 + 1; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n}\r\nconst ShopContextProvider = (props) => {\r\n\r\n    const [all_product, setAll_Product] = useState([]);\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const [user, setUser] = useState(null); // เก็บข้อมูลผู้ใช้ที่ล็อกอิน\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/allproducts')\r\n            .then((response) => response.json())\r\n            .then((data) => setAll_Product(data))\r\n\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/getcart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/form-data',\r\n                    'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: \"\",\r\n            }).then((response) => response.json())\r\n                .then((data) => setCartItems(data))\r\n        }\r\n        // ดึงข้อมูลผู้ใช้เมื่อมี auth-token\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/getuserinfo', { // สมมติว่า API มี endpoint สำหรับดึงข้อมูลผู้ใช้\r\n                method: 'GET',\r\n                headers: {\r\n                    'auth-token': localStorage.getItem('auth-token'),\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    setUser(data); // เก็บข้อมูลผู้ใช้ที่ล็อกอิน\r\n                })\r\n                .catch((error) => console.error('Error fetching user info:', error));\r\n        }\r\n    }, [])\r\n\r\n    const addToCart = (itemId, size, price) => {\r\n        const authToken = localStorage.getItem('auth-token');\r\n\r\n        if (authToken) {\r\n            // ส่งคำขอ POST เพื่อเพิ่มสินค้าในตะกร้า\r\n            fetch('http://localhost:4000/addtocart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'auth-token': authToken,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \"itemId\": itemId, \"size\": size, \"price\": price }),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Added to cart response:', data);\r\n\r\n                    // ตรวจสอบผู้ใช้จากการรับ auth-token\r\n                    const name = data?.name; // assuming userId is returned in response for user identification\r\n\r\n                    if (name) {\r\n                        // แสดงข้อมูลของผู้ใช้ในคอนโซล\r\n                        console.log('User info:', data.user);\r\n                    } else {\r\n                        console.warn('Unable to retrieve user information');\r\n                    }\r\n\r\n                    // Fetch updated cart items after adding\r\n                    return fetch('http://localhost:4000/getcart', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            Accept: 'application/json',\r\n                            'auth-token': authToken,\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: \"\", // No body data needed for getting the cart\r\n                    });\r\n                })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log('Updated cart items:', data);\r\n                    setCartItems(data); // update the state with new cart items\r\n                })\r\n                .catch(error => console.error('Error:', error));\r\n        } else {\r\n            console.warn('User not authenticated');\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const removeToCart = (itemId, size) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }))\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/removefromcart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/form-data',\r\n                    'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \"itemId\": itemId, \"size\": size }),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => console.log(data)).finally(() => {\r\n                    fetch('http://localhost:4000/getcart', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            Accept: 'application/form-data',\r\n                            'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: \"\",\r\n                    }).then((response) => response.json())\r\n                        .then((data) => setCartItems(data))\r\n                })\r\n        }\r\n    }\r\n\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        if (cartItems.length > 0) {\r\n            totalAmount = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\r\n        }\r\n        return totalAmount;\r\n    }\r\n\r\n    const getTotalCartItem = () => {\r\n        let totalItem = 0;\r\n        if (cartItems.length > 0) {\r\n            totalItem = cartItems.reduce((acc, item) => acc + item.quantity, 0);\r\n        }\r\n        return totalItem;\r\n    }\r\n\r\n\r\n\r\n    const contextValue = { getTotalCartItem, getTotalCartAmount, all_product, cartItems, addToCart, removeToCart };\r\n\r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ShopContextProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}